@page "/addproduct"
@inject NavigationManager navigationManager
@inject UseCases.UseCaseInterfaces.Products.IAddProductUseCase addProductUseCase
@inject UseCases.UseCaseInterfaces.Categories.IViewCategoriesUseCase viewCategoriesUseCase
<h3>Add Product</h3>

@if(productToAdd !=null)
{
<EditForm Model="productToAdd" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <div class="form-group">
        <label for="Name">Name</label>
        <InputText id="Name" @bind-Value="productToAdd.Name" placeholder="Product Name" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label for="Category">Category</label>
        <InputSelect @bind-Value="productToAdd.CategoryId" class ="form-control">
            @foreach (var category in categories)
                {
                <option value="@category.CategoryId"> @category.Name</option>
                }
        </InputSelect>
    </div>
    <div class="form-group">
        <label for="Quantity">Quantity</label>
        <InputNumber id="Quantity" @bind-Value="productToAdd.Quantity" placeholder="Product Quantity" class="form-control"></InputNumber>
    </div>
    <div class="form-group">
        <label for="Price">Price</label>
        <InputNumber id="Price" @bind-Value="productToAdd.Price" @bind-Value:format="F2" placeholder="Product Price" class="form-control"></InputNumber>
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-danger" @onclick ="ReturnToProducts">Cancel</button>
</EditForm>
}

@code {

    private Product productToAdd;
    private IEnumerable<Category> categories;

    protected override void OnInitialized()
    {
        productToAdd = new Product();
        LoadCategories();
        base.OnInitialized();
    }

    private void OnValidSubmit()
    {
        addProductUseCase.Execute(productToAdd);
        navigationManager.NavigateTo("/products");
    }

    private void LoadCategories()
    {
        categories = viewCategoriesUseCase.Execute();
    }

    private void ReturnToProducts()
    {
        navigationManager.NavigateTo("/products");
    }
}
