@page "/editcategory/{CategoryId}"
@inject NavigationManager navigationManager
@inject  UseCases.UseCaseInterfaces.Categories.IGetCategoryByIdUseCase getCategoryById
@inject  UseCases.UseCaseInterfaces.Categories.IEditCategoryUseCase editCategoryUseCase
<h3>Edit Category</h3>

@if (category != null)
{
    <EditForm Model="category" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" class="form-control" @bind-Value="category.Name"></InputText>
        </div>
        <div class="form-group">
            <label for="description">Description</label>
            <InputText id="description" class="form-control" @bind-Value="category.Description"></InputText>
        </div>
        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn-primary btn" @onclick="OnCancel">Cancel</button>
    </EditForm>
}

@code {
    [Parameter]
    public string CategoryId { get; set; }

    private Category category;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (int.TryParse(this.CategoryId, out int iCategoryId))
        {
            this.category = getCategoryById.Execute(iCategoryId);
        }
    }

    private void OnValidSubmit()
    {
        editCategoryUseCase.Execute(this.category);
        navigationManager.NavigateTo("/categories");
    }

    private void OnCancel()
    {
        navigationManager.NavigateTo("/categories");
    }

}